# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.87 94/04/17 20:10:28 rws Exp $

# -----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $Id: Imake.tmpl,v 1.1.1.1 1999/05/14 20:57:07 morreale Exp $
#

.SUFFIXES: .i

# $Id: Imake.cf,v 1.1.1.1 1999/05/14 20:57:09 morreale Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# $Id: site.p-def,v 1.3 2000/02/25 15:52:56 morreale Exp $

# site:  $Id: site.def,v 1.1.1.1 1999/05/14 20:57:08 morreale Exp $

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux.cf to change

# platform:  $Id: linux.cf,v 1.4 1998/12/17 20:38:11 cruff Exp $

# operating system:  Linux_x86 2 2 9
# OSMajorNumber:	 2
# OSMinorNumber:	 2
# OSTeenyNumber:	 9

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# $Id: site.p-def,v 1.3 2000/02/25 15:52:56 morreale Exp $

# site:  $Id: site.def,v 1.1.1.1 1999/05/14 20:57:08 morreale Exp $

# $Id: Imake.rules,v 1.1.1.1 1999/05/14 20:57:09 morreale Exp $
# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files

          PATHSEP = /
            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

            IMAKE = ncar_imake
           DEPEND = ncar_makedepend
        MKDIRHIER = ncar_mkdirhier
        CONFIGSRC = $(TOP)/cf
         IMAKESRC = $(BINSRC)/ncar_imake
        DEPENDSRC = $(BINSRC)/ncar_makedepend

          INCROOT = /usr/local/include
        LINKLIBDIR = /usr/local/lib
         SHLIBDIR = /usr/local/lib
       LINTLIBDIR = $(LINKLIBDIR)/lint
          MANPATH = /usr/local/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = cc
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 4
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn

           PURIFY = purify
    PURIFYOPTIONS =

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags
               M4 = m4

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0644
     INSTMANFLAGS = -m 0644
     INSTDATFLAGS = -m 0644
    INSTKMEMFLAGS = -m 4755

      PROJECTROOT = /usr/local

     TOP_INCLUDES = -I$(BUILDINCROOT)

      CDEBUGFLAGS = -g
        CCOPTIONS =
    CCMDLINEFLAGS =
       CSITEFLAGS =
      LDSITEFLAGS =
      CLOCALFLAGS =
     LDLOCALFLAGS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)

 PLATFORM_DEFINES = -DArchLinux -DOSMajorVersion=2 -DOSMinorVersion=2
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) 			$(PROTO_DEFINES) $(THREADS_DEFINES) 			$(PLATFORM_DEFINES) $(DEFINES)

           CFLAGS = $(CCMDLINEFLAGS) $(CDEBUGFLAGS) $(CLOCALFLAGS) 			$(CSITEFLAGS) $(CCOPTIONS) 			$(THREADS_CFLAGS)  $(ALLDEFINES)

        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(BUILDLIBDIR)
        LDPOSTLIB = -L$(LINKLIBDIR)
        LDOPTIONS = $(CDEBUGFLAGS) $(LDLOCALFLAGS) $(LDSITEFLAGS) 			$(CCOPTIONS)  $(EXTRA_LDOPTIONS) 			$(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXLDLOCALFLAGS) $(CXXLDSITEFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =
    DEPEND_DEFINES =

        MACROFILE = linux.cf
           RM_CMD = $(RM)

IMAKE_DEFINES	=

IRULESRC        = $(CONFIGSRC)
IMAKE_CMD 	= $(IMAKE) 		-I$(PRIVCONFIGDIR) -I$(PUBCONFIGDIR) 		-DPubConfigDir=$(PUBCONFIGDIR) $(IMAKE_DEFINES)

# -----------------------------------------------------------------------
# X DCS Project config project parameters
# $Id: Project.p-tmpl,v 1.1.1.1 1999/05/14 20:57:05 morreale Exp $

LIBLIB		= $(TOP)/./lib

DEPNCARU_LIB = $(BUILDLIBDIR)/libncaru.a
NCARU_LIB =  -lncaru

LINTNCARU_ = $(LIBLIB)/llib-ncaru.ln

# -----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $Id: Project.tmpl,v 1.1.1.1 1999/05/14 20:57:08 morreale Exp $

CONFIGROOTDIR	= $(LIBDIR)/cf
PRIVCONFIGDIR	= $(TOP)/cf

#
# This is the path to the "public" ncar_imake config files. It will
# be set in "private" Makefiles when booted via ncar_imake.
#
PUBCONFIGDIR	= /tmp/morreale/lib/ncar_imake/cf

BUILDROOT	= $(TOP)/build

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

PROJECTNAME	= ncaru

BINDIR 		= /usr/local/bin
LINKLIBDIR 	= /usr/local/lib
LIBDIR 		= $(LINKLIBDIR)/$(PROJECTNAME)
INCROOT		= /usr/local/include
INCDIR 		= $(INCROOT)/$(PROJECTNAME)

BUILDINCROOT 	= $(BUILDROOT)/include
BUILDINCDIR 	= $(BUILDINCROOT)/$(PROJECTNAME)
BUILDINCTOP 	= ../../..
BUILDLIBDIR 	= $(BUILDROOT)/lib
BUILDLIBTOP 	= ../..

LINKLIBSRC 	= $(TOP)/./lib
BINSRC 		= $(TOP)/./bin
UTILSRC		= $(TOP)/./util

DEPLIBS = $(LOCAL_LIBRARIES)

        CONFIGDIR = $(LIBDIR)/cf

# -----------------------------------------------------------------------
# start of Imakefile

RELEASE = "Release 1.1"

# SUBDIRS	= cf lib tests man utils tests
SUBDIRS	= lib man utils tests parse

all::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "making" all "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS) CDEBUGFLAGS="$(CDEBUGFLAGS)" all); \
	done

depend::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "depending" "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS)  depend); \
	done

VerifyOS::
	@echo ""
	@echo Building on Linux_x86 2 2 9.
	@echo ""

includes::
	@if [ -d $(BUILDINCDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(BUILDINCDIR)); fi

#
# Watch out!!!  Make sure you do make includes after removing X11....
#
clean::
	$(RM) -r $(BUILDINCDIR)
	$(RM) -r $(BUILDLIBDIR)

WORLDOPTS 	= -k

# do not name your log file make.log when you run this ...
World::
	@echo ""
	@echo Building $(RELEASE) of NCAU
	@echo ""
	@date
	@echo ""
	$(MAKE) $(MFLAGS) VerifyOS
	$(MAKE) $(MFLAGS) Makefiles
	$(MAKE) $(MFLAGS) clean
	$(MAKE) $(MFLAGS) includes
	$(MAKE) $(MFLAGS) depend
	$(MAKE) $(MFLAGS) $(WORLDOPTS)
	@echo ""
	@date
	@echo ""
	@echo Full build of $(RELEASE) of NCARU
	@echo ""

# clean out link tree looking for stuff that should get checked in
dangerous_strip_clean::
	make -k clean
	find . -type l -exec rm {} \;
	find . \( \! \( -type d -o -name Makefile \) \) -print

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM_CMD) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut PureFilesToClean  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -----------------------------------------------------------------------
# rules for building in SUBDIRS - do not edit

install::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install); \
	done

install.man::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install.man); \
	done

clean::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS) RM_CMD='$(RM_CMD)' clean); \
	done

tags::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags); \
	done

Makefiles::
	-@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	case '${MFLAGS}' in *n*) executeit="no";; esac; \
	for i in $(SUBDIRS) ;\
	do \
	case "$(CURRENT_DIR)" in \
	.) curdir= ;; \
	*) curdir=$(CURRENT_DIR)/ ;; \
	esac; \
	echo "making Makefiles in $$curdir$$i..."; \
	case "$$i" in \
	*/?*/?*/?*)	newtop=../../../..;; \
	*/?*/?*)	newtop=../../..;; \
	*/?*)		newtop=../..;; \
	*)		newtop=..;; \
	esac; \
	case "$(TOP)" in \
	/?*) imaketop=$(TOP) \
	imakeprefix= ;; \
	.) imaketop=$$newtop \
	imakeprefix=$$newtop/ ;; \
	*) imaketop=$$newtop/$(TOP) \
	imakeprefix=$$newtop/ ;; \
	esac; \
	cd $$i; \
	$(RM) Makefile.bak; \
	if [ -f Makefile ]; then \
	echo "	$(MV) Makefile Makefile.bak"; \
	if [ "$$executeit" != "no" ]; then \
	$(MV) Makefile Makefile.bak; \
	fi; \
	fi; \
	if [ "$$executeit" != "no" ]; then \
	echo $(IMAKE) -I$$imakeprefix$(PRIVCONFIGDIR) -I$(PUBCONFIGDIR)  -DPubConfigDir=$(PUBCONFIGDIR) $(IMAKE_DEFINES) -DTOPDIR=$$imaketop -DCURDIR=$$curdir$$i; \
	$(IMAKE) -I$$imakeprefix$(PRIVCONFIGDIR) -I$(PUBCONFIGDIR)  -DPubConfigDir=$(PUBCONFIGDIR) $(IMAKE_DEFINES) -DTOPDIR=$$imaketop -DCURDIR=$$curdir$$i; \
	fi; \
	$(MAKE) $(MFLAGS) IMAKE_DEFINES="$(IMAKE_DEFINES)" Makefiles; \
	cd $$newtop; \
	done

includes::
	@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
	(cd $$i ; echo including "in $(CURRENT_DIR)/$$i..."; \
	$(MAKE) $(MFLAGS)  includes); \
	done

# -----------------------------------------------------------------------
# dependencies generated by ncar_makedepend

