XCOMM platform:  $Id: sun.cf,v 1.1.1.1 1999/05/14 20:57:08 morreale Exp $

#ifdef SVR4
#ifdef i386Architecture
#define OSName		SunOS_x86 OSMajorVersion OSMinorVersion OSTeenyVersion

#else
#define OSName		SunOS OSMajorVersion OSMinorVersion OSTeenyVersion

#endif
#else
#define OSName		SunOS OSMajorVersion OSMinorVersion OSTeenyVersion

#endif

/*
**	ncar_imake will automatically define the macros OSMajorVersion, 
**	OSMinorVersion, and OSTeenyVersion to the appropriate version
**	numbers.
*/
XCOMM operating system:  OSName
XCOMM OSMajorNumber:	 OSMajorVersion
XCOMM OSMinorNumber:	 OSMinorVersion
XCOMM OSTeenyNumber:	 OSTeenyVersion

/*
 * Compiler setup.  This sun.cf file knows what options to use with 
 * certain compilers, including Sun C, CenterLine C, and gcc.  If you
 * don't tell us which compiler you have, we assume you have the 
 * unbundled Sun C compiler under Solaris 2.x, and the bundled /bin/cc
 * under SunOS 4.1.x
 *
 * If you have CenterLine C, you can just define HasCenterLineC to YES
 * in site.def, or if you have gcc or gcc2, you can just define HasGcc 
 * or HasGcc2 to YES in site.def
 * 
 * If you have some other compiler, you must define HasSunC to NO in
 * site.def, then provide appropriate values for the various compiler
 * related configuration varibles used here.  If you submit changes to
 * support other compilers as an X11 request for enhancement, we'll
 * consider adding them in the future.  It's always easier to add and
 * support such changes if we have a copy of the compiler in question.
 */

#ifndef HasSunC
#if (HasCenterLineC || HasGcc || HasGcc2 || OSMajorVersion < 5)
#define HasSunC NO
#else
#define HasSunC YES
#endif
#endif

/*
 * If you say you have the unbundled Sun C compiler, we assume you have
 * version 2.0.x of the compiler unless you say otherwise.  If you have
 * version 3.0.x of the C compiler, define CCompilerMajorVersion as 3
 * in site.def
 */

#if HasSunC 
#ifndef CCompilerMajorVersion
#define CCompilerMajorVersion 2
#endif
#ifndef CcCmd
#define CcCmd /opt/SUNWspro/bin/cc
#endif
#endif

/*
 * If you say you have the Sun C++ compiler, we assume you have version 
 * 3.0.x of the compiler (the cfront-based version) unless you say otherwise.
 * If you have version 4.0.x of the C++ compiler (the one with exceptions)
 * define CplusplusCompilerMajorVersion as 4 in site.def
 */

#if HasSunCplusplus
#ifndef CplusplusCompilerMajorVersion
#define CplusplusCompilerMajorVersion 3
#endif
#ifndef CplusplusCmd
#define CplusplusCmd /opt/SUNWspro/bin/CC
#endif
#endif

/*
 * If you say you have the CenterLine C compiler, we assume that clcc
 * is somewhere in your default path.
 */

#if HasCenterLineC
#ifndef CcCmd
#define CcCmd clcc
#endif
#endif

#if OSMajorVersion < 4 || (OSMajorVersion == 4 && OSMinorVersion < 1)
/* We do not guarantee this will work */
#define BootstrapCFlags   -DNOSTDHDRS
#define StandardDefines   -DNOSTDHDRS
#endif

#if OSMajorVersion == 4 
#if OSMinorVersion == 1
#define HasPoll           YES
#endif
#if OSMinorVersion > 1 || (OSMinorVersion == 1 && OSTeenyVersion > 1)
/* You ALSO need this if you have Sun ld patch 100170-06 or later to 4.1.1 */
#define SunPost411FCSLd	  YES
#endif
#endif

#if OSMajorVersion > 4
#ifdef i386Architecture
#define StandardDefines	  -Dsun -Di386 -DSVR4
#else
#define StandardDefines	  -Dsun -DSVR4
#endif
#define ExtraLibraries    -lsocket -lnsl
#if OSMinorVersion > 1
#if HasSunC && CCompilerMajorVersion > 2
#define ThreadsCompileFlags -mt
#else
#define SystemMTDefines -D_REENTRANT
#define ThreadsLibraries -lthread
#endif
#if HasSunCplusplus && CplusplusCompilerMajorVersion > 3
#define ThreadsCplusplusCompileFlags -mt
#else
#define CplusplusSystemMTDefines -D_REENTRANT
#define ThreadsCplusplusLibraries -lthread
#endif
#endif 		/* OSMinorVersion > 1 */
#define HasVFork          NO
#define InstKmemFlags	  -g sys -m 2755
#define ShLibIncludeFile <sunLib.tmpl>
/*
 * Set flags for position independent code before including sv4Lib.rules
 * if the compiler in use doesn't use standard SVR4 flags
 */
#if HasSunC || HasCenterLineC
#define PositionIndependentCFlags -Kpic
#endif
#if HasSunCplusplus || HasCenterLineCplusplus
#define PositionIndependentCplusplusFlags -pic
#endif
#include <svr4.cf>
#else
#define InstKmemFlags	  -g kmem -m 2755
#include <sunLib.rules>
#endif

#define CCsuf		C
#define HasCplusplus	YES
#define HasNdbm		  YES
#define HasShm		  YES
#define HasSecureRPC	  YES
#define SetTtyGroup	  YES
#define HasPutenv	  YES
#ifndef i386Architecture
#endif /* not i386Architecture */

#if HasGcc
#if HasGcc2
#define OptimizedCDebugFlags -O2
#else
#define SharedLibraryCcCmd cc
#define ExtraLoadFlags -B/usr/bin/
#define AllocateLocalDefines /**/
#endif

.c.o:
	$(CC) -c $(CFLAGS) $*.c

#else

#define AllocateLocalDefines -DINCLUDE_ALLOCA_H

/* Set up compiler-dependent options for Sun C */

#if HasSunC
#ifdef Sun3Architecture
#ifndef DefaultCCOptions
#define DefaultCCOptions -f68881 -pipe
#endif
#else	/* not defined(Sun3Architecture) */
#if OSMajorVersion < 5
#ifndef DefaultCCOptions
#define DefaultCCOptions -pipe
#endif
#else	/* OSMajorVersion >= 5*/
#ifndef DefaultCCOptions
#define DefaultCCOptions -Xc
#endif
#endif	
#endif	
#endif

/* Set compiler-dependent options for CenterLine C */

#if HasCenterLineC
#ifndef	DefaultCCOptions
#define DefaultCCOptions -Xt -w1 -DANSICPP -U__HIGHC__
#endif
#ifndef NeedConstPrototypes
#define NeedConstPrototypes YES
#endif
#ifndef NeedNestedPrototypes
#define NeedNestedPrototypes YES
#endif
#ifndef NeedVarargsPrototypes
#define NeedVarargsPrototypes YES
#endif
#endif


#define PexCCOptions DefaultCCOptions

#endif

#if OSMajorVersion < 5
#define SharedAllocateLocalDefines -DINCLUDE_ALLOCA_H
#define LibraryCCOptions /* don't want special floating point */
#endif




/*
** Replace default InstallManPageAliases() rule. Sun treats man .so's
** differently if they appear in the first line of the man page. This
** rule inserts a blank line at the top
*/
#ifndef InstallManPageAliases
#define	InstallManPageAliases(file,destdir,aliases,suffix)		@@\
install.man::								@@\
	@(TMP=/tmp/tmp.$$$$; \						@@\
	RemoveFile($${TMP}); \						@@\
	echo "" > $${TMP}; \						@@\
	echo .so destdir/file.suffix >> $${TMP}; \			@@\
	for i in aliases; do (set -x; \					@@\
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) $${TMP} $(DESTDIR)destdir/$$i.suffix); \ @@\
	done; \								@@\
	RemoveFile($${TMP}))
#endif /* InstallManPageAliases */
