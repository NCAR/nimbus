#!/bin/csh -f
#
#      $Id: uname,v 1.1.1.1 1999/05/14 20:57:10 morreale Exp $
#
#########################################################################
#									#
#			   Copyright (C)  1992				#
#	     University Corporation for Atmospheric Research		#
#			   All Rights Reserved				#
#									#
#########################################################################
#
#	File:		uname
#
#	Author:		John Clyne
#			National Center for Atmospheric Research
#			PO 3000, Boulder, Colorado
#
#	Date:		Wed Feb 10 12:30:40 MST 1993
#
#	Description:	Return system name. This command is a restricted
#			version of the POSIX defined uname utility which
#			elimininates some of the ambiguity allowed by
#			the POSIX standard. 
#
#	Usage:		uname [-a | ([-m|M] [-n] [-r] [-s] [-v]]
#
#	Environment:
#
#	Files:		/bin/uname - the native uname command
#
#
#	Options:	All options are identical to those defined by
#			the POSIX standard with the execption of the -M
#			option which is not part of the POSIX definition
#
#			-M :	Like the -m option except the "generic"
#				machine type is reported. It is the intent
#				that machines with the same machine type
#				as reported by the -M option are binary
#				compatable. For example, the -M option on 
#				a sun4c, or sun4, or sun4m  reports 'sun4'.

if ($#argv == 0) then
	set argv = (-s)		# default behaviour
endif

if ("$argv[1]" == "-a") then
	set argv = (-M -n -r -s -v)
endif

set	arch = ""		# archictecture (-M opt)
set	machine_type = ""	# machine type (-m opt)
set	node_name = ""		# host name (-n opt)
set	release = ""		# current release (-r opt)
set	operating_system = ""	# OS (-s opt)
set	version = ""		# version level (-v opt)

#
# figure out what we are running on so we can deal with implementation
# specific details. Thank god for standards.
#
if (! -e /bin/uname) then 
	echo "/bin/uname command not found" > /dev/tty
	exit 1
endif

set foo = `/bin/uname -s`
if ($status != 0) exit 1

switch ("$foo")

case SunOS:
	set os = sunos
	breaksw

case HP-UX:
	set os = hpux
	breaksw

case ULTRIX:
	set os = ultrix
	breaksw

case AIX:
	set os = aix
	breaksw

case OSF1:
	set os = osf1
	breaksw

case IRIX*:
	set os = irix
	breaksw

case sn*:
	set os = unicos
	breaksw

default
	set os = $foo
	breaksw
endsw


while($#argv)

	switch ("$argv[1]")

	case	-m:
		set machine_type = `/bin/uname -m`
		if ($status != 0) exit 1
		breaksw

	case	-n:
		switch ("$os")
		case	unicos:
			set node_name = `/bin/hostname`;
			if ($status != 0) exit 1
			breaksw
		default:
			
			set node_name = `/bin/uname -n`
			if ($status != 0) exit 1
			breaksw
		endsw

		set node_name = `echo $node_name | sed -e 's/\..*//'`
		breaksw

	case	-r:
		switch ("$os")
		case	aix:
			set foo = `/bin/uname -a`
			if ($status != 0) exit 1

			set release = $foo[4].$foo[3]
			breaksw
		case	osf1:
			set release = `/bin/uname -r | /usr/bin/tr -d 'V'`
			if ($status != 0) exit 1
			breaksw

		case	hpux:
			set release = `/bin/uname -r | sed -e 's/[a-zA-Z]\.//'`
			if ($status != 0) exit 1
			breaksw

		case	unicos:
			set release = `/bin/uname -r | /usr/bin/tr -dc '[0-9].'`
			if ($status != 0) exit 1
			breaksw

		default:
			
			set release = `/bin/uname -r`
			if ($status != 0) exit 1
			breaksw
		endsw
		breaksw

	case	-s:
		switch ("$os")
		case	sunos:
			set foo = `/bin/uname -r`
			if ($status != 0) exit 1

			switch ("$foo")
			case	5*:
				set operating_system = solaris
				breaksw

			default
				set operating_system = $os
				breaksw
				
			endsw
			
			breaksw

		default
			set operating_system = $os
			breaksw
		endsw

		breaksw

	case	-v:
		set version = `/bin/uname -v`
		if ($status != 0) exit 1
		breaksw

	case	-M:
		
		set mach = `/bin/uname -m`
		if ($status != 0) exit 1

		switch ("$os")
		case	sunos:
			switch ("$mach")
			case	sun4*:
				set arch = sun4
				breaksw
			case	sun3*:
				set arch = sun3
				breaksw
			case	sun2*:
				set arch = sun2
				breaksw
			default:
				echo "$0 : Unknown machine type" > /dev/tty
				exit 1
			endsw
			breaksw

		case	aix:
			switch ("$mach")
			case	00??????????:
				set arch = rs6k
				breaksw
			default:
				echo "$0 : Unknown machine type" > /dev/tty
				exit 1
			endsw
			breaksw

		case	irix:
			switch ("$mach")
			case	IP*:
				set arch = sgi
				breaksw
			default:
				echo "$0 : Unknown machine type" > /dev/tty
				exit 1
			endsw
			breaksw

		case	ultrix:
			set arch = dec-risc
			breaksw

		case	hpux:
			switch ("$mach")
			case	9000/7??:
			case	9000/8??:
				set arch = 9000-7xx
				breaksw
			default:
				echo "$0 : Unknown machine type" > /dev/tty
				exit 1
			endsw
			breaksw

		case	unicos:
			switch ("$mach[2]")
			case	Y*:
				set arch = cray-ymp
				breaksw
                        case    J*:
				set arch = J90
                                breaksw
			default:
				echo "$0 : Unknown machine type" > /dev/tty
				exit 1
			endsw
			breaksw

		case	osf1:
			set arch = $mach
			breaksw

		default
			set arch = $mach
			breaksw
		endsw
		breaksw

	default:
		echo "Usage: $0 [-a | ([-m|M] [-n] [-r] [-s] [-v]]" > /dev/tty
		exit 1
		breaksw
	endsw



	shift
end

echo $arch $machine_type $node_name $release $operating_system $version

exit 0
