# -*- python -*-

import os
import sys

# Rather than depend upon finding eol_scons somewhere else in the RAF
# source tree, expect it to be on the standard search path:
# /usr/share/scons/site_scons or ~/.scons/site_scons.
import eol_scons

def nimbusbase(env):
    env.Require(['buildmode', 'nidas', 'netcdf', 'jlocal'])
    env['CC'] = ['g++']
    env.Append(LIBPATH=['#/lib', '$JLOCAL/lib'])
    env.Append(CPPPATH=['#/include', '#/src/filter'])
    env.Append(CCFLAGS=Split("-Wno-write-strings -Wstrict-aliasing"))

env = Environment(platform='posix', tools=['default', nimbusbase])

# This is defunct.  NIMBUS does not currently build without real-time enabled,
# so it must be that no one still needs to build it that way.
#
# env.realtime = ARGUMENTS.get('rt', 1)

import SCons
file = "sconsign-%s" % (SCons.__version__)
print "Using SConsignFile: %s" % (file)
SConsignFile(File(file).abspath)

# No RCS/SCCS checkout.
# env.SourceCode(['.', 'amlib', 'filter'], None)

# This should be handled by the jlocal tool.
#
# # This is mostly for buildbot, which does not use the Jeffco login.
# try: env['JLOCAL'] = os.environ['JLOCAL']
# except KeyError:
#     print "\n$JLOCAL not found!  Defaulting to '/opt/local'\n"
#     env['JLOCAL'] = '/opt/local/'

Export('env')

##
##  Build include files.
##
SConscript('include/SConscript')

##
##  Build Derived Calculations libraries.
##
SConscript('src/ncaru/src/SConscript')

##
##  Build Derived Calculations libraries.
##
SConscript('src/amlib/SConscript')

##
##  Build nimbus proper.
##
SConscript('src/filter/SConscript')

Alias('install', env.subst("${JLOCAL}/bin"))

SConscript('tests/SConscript')

variables = env.GlobalVariables()
variables.Update(env)
Help(variables.GenerateHelpText(env))

ninja = Environment(tools = ['default', 'ninja'])
ninja.NinjaCheck()
