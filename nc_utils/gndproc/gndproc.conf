#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#          C O N F I G U R A T I O N   F I L E   F O R
#
#        C - S H E L L   S C R I P T   " G N D P R O C " 
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#   Created by Ron Ruth on 24 May 2002
#   Revised by RLR         24 Jul 2002 (test configuration)
#   Revised by RLR         17 Apr 2003 (NRL P-3 project configuration)
#   Revised by RLR         26 Jul 2005 (added "none" to email options)
#   Revised by RLR         16 Aug 2005 (added "ldm" copy option)
#
#   Notes:  Comment lines start with # and are ignored.
#           This file's name MUST end in ".conf".
#           Absolute file paths must be used in any file descriptors.
#            (Use no environment variables or $$.)
#           Job file templates can be found at the end of this file.
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#      P R O J E C T - R E L A T E D   C O N F I G U R A T I O N
#
#          Configuration parameters applicable to a project
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#---------------------------------------------------------------------
#--------  e_names -- List of email addresses for logging      -------
#--------               the script's progress                  -------
#--------             Each time the script completes, an       -------
#--------               email message is sent to this list.    -------
#--------  Notes:  Append ",newname" for each new name.        -------
#--------             Important:  use no <space> characters    -------
#--------             between concatenated names.              -------
#--------          If no email is to be sent,                  -------
#--------             set address = "none"                     -------
#---------------------------------------------------------------------
#e_names = ruth@ucar.edu,schanot@ucar.edu
#e_names = ruth@ucar.edu
e_names = none
#   For LDM, actual email recipients are maintained by the LDM server
#e_names = via_ldm
#
#---------------------------------------------------------------------
#-----  raw_file_types -- List of raw-data file types to         -----
#-----                      be copied from removable media       -----
#-----  Note:  All file types start with "r".                    -----
#-----  rads = ADS, r2d = PMS-2D, rmcr = MCR                     -----
#---------------------------------------------------------------------
raw_file_types = rads
#raw_file_types = rads r2d rmcr
#
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#             G E N E R A L   C O N F I G U R A T I O N
#
#    Everything below this heading should be left alone unless the
#    Ground Station computer is reconfigured and settings must be
#    changed to conform.
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#  Configuration variable list (values set below)
#    C A U T I O N :   "debug" should be the first entry in this list !!!
c_vars = debug quiet S D mbufr mp e_names lext
#c_vars = debug quiet test S D mbufr mp e_names lext
#
#   Configuration variable settings
#
#    Quiet mode--suppress messages to terminal that will be saved in log file
#     (If "yes," it can be overridden by command-line option "-v.")
quiet = yes
#quiet = no
#
#    Debug mode--verbose output (to terminal) of script's progress 
#     (If "no, " it can be overridden by command-line option "-d."
#     If debug output is enabled, then "quiet" mode is disabled, too.)
debug = no
#debug = yes
#
#    Test mode--perform the tasks (no) or only display what the tasks are (yes)
test = no
#test = yes
#
#    Ground station removable drive path
#S = /r1
S = /mnt/zip250.0
#
#    Ground station data-destination path
#D = /fnet/data
#D = /jnet/data
D = /temporary
#
#    Email message-buffer file name (script will prepend $D and append .PID)
mbufr = gndproc_log
#
#    Email program
#mp = /bin/mail
#     LDM assignment for email (use correct machine name)
#mp = rsh renegade -l ldm pqinsert
#
#    Log file extension
lext = log
#
#
#   Full path name for scratch message file (script will append .PID)
#msg_f = /fnet/data/gndproc_msg
msg_f = /jnet/data/gndproc_msg
#
#
#  Program name variable assignment list
p_vars = grep awk mount umount ls cp df gzip gunzip scp sed rm wc
#
#   Program name assignments (add command-line options, if necessary)
grep = /bin/grep 
awk = /bin/awk 
mount = /bin/mount 
umount = /bin/umount 
ls = /bin/ls 
cp = /bin/cp -p
df = /bin/df -k
gzip = /bin/gzip -f
gunzip = /bin/gunzip 
sed = /bin/sed 
rm = /bin/rm
wc = /usr/bin/wc
#
#
#  File extension variable definitions
extensions = rads r2d rmcr next aext gext
#
#   File extension assignments
#rads =  Raw ADS file extension
rads = ads
#r2d  =  Raw PMS-2D file extension
r2d = 2d
#rmcr =  Raw MCR file extension  (? means [a-z])
rmcr = rawMCR?
#rrdma = RDMA file extension
#rrdma = rdma
#next = netCDF file extension
next = nc
#aext = ASCII file extension
aext = asc
#gext = gzipped file extension
gext = gz
#
#
#---------------------------------------------------------------------
#-------------------  Built-in job configuration   -------------------
#-------------------  (Script always does this.)   -------------------
#---------------------------------------------------------------------
# Default built-in job:  copy_raw_local
#                        copy new, local, raw-data files from $S to $D
#  
#
#-------  Job list configuration (as of 27 July 2002)  -------
#    Job types and execution order:
#      nimbus (1)
#      n2asc  (2)
#      copy   (3)
#       Copy types
#         ldm
#         scp
#         ftp    (in development)
#         sftp   (not yet)
#    File types:
#      ads  - raw ADS
#      2d   - raw PMS-2D
#      mcr  - raw MCR
#      rdma - processed RDMA
#      cdf  - processed netCDF file from nimbus
#      asc  - processed ASCII from n2asc
#    Users (actually are defined by each specific job file.)
#     Examples:
#      raf (RAF at Jeffco)
#      rtf (RTF at field site)
#    Job file name is formed by combining the 3 sections above.
#    (See example job files at the end of this file.)
#
#---------------------------------------------------------------------
#----------  Valid job types (in the order to be performed)  ---------
#---------------------------------------------------------------------
job_types = nimbus n2asc copy
#
#-------  Tentative below (not used yet)
#---------------------------------------------------------------------
#--------  proc_file_types -- Processed data file types        -------
#--------  (pcdf = netCDF, pasc = ASCII, prdma = RDMA)         -------
#---------------------------------------------------------------------
proc_file_types = pcdf pasc
#proc_file_types = pcdf pasc prdma
pcdf = nc
pasc = txt
prdma = rdma
#-------  Tentative above (not used yet)
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#           E N D   O F   C O N F I G U R A T I O N
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#            J O B   F I L E   T E M P L A T E S
#
# (Put job files in project's Production/gndproc subdirectory.)
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#------------  Example:  nimbus_ads_raf  -----------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  nimbus_ads_raf
#    run "nimbus" using raw ADS data to produce the standard RAF netCDF file
#
#  Note:  Comment lines start with #
#
#  What is set (Edit this line to add/delete settings.)
nimbus_set = nimbus_p nimbus_sf pr
#
#  Settings
#   nimbus program
#    Production version
nimbus_p = nimbus
#nimbus_p = /jnet/linux/bin/nimbus
#    Development version
#nimbus_p = /usr/local/dev/nimbus/src/filter/nimbus
#
#   nimbus setup file to use for processing
nimbus_sf = /usr/local/proj/301/Production/setup.301
#nimbus_sf = $PROJ_DIR/301/Production/setup.301     <-- cannot use environment
#
#   nimbus processing rate
pr = 1
#
#  nimbus output file name modifier for user:  RAF
#    file name will be of the form pppxfnns_fmod.next
#     where:   ppp = 3-digit project number
#                x = f (ferry), r (research), t(test)
#                f = <f character>
#               nn = 2-digit flight number
#                s = possible segment letter (may not be present)
#                _ = <underscore character>
#             fmod = file name modifier             <-- (set below)
#                . = <period character>
#             next = netCDF extension (nc)
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e.,
#     not a standard RAF data set, to another user.)
#fmod = raf
#
#-------  end of nimbus_ads_raf template
#
#------------  Example:  n2asc_cdf_rtf  -----------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  n2asc_cdf_rtf
#    run "n2asc" using nimbus netCDF data to produce a SPECIAL
#      ASCII data file for RTF
#
#  Note:  Comment lines start with #
#
#  What is set (Edit this line to add/delete settings.)
n2asc_set = n2asc_p format varlist nasa fmod
#n2asc_set = n2asc_p varlist
#
#  Settings
#   n2asc program
#    (Don't add command-line options, since they're handled by the script.)
#    Production version
n2asc_p = n2asc
#n2asc_p = /usr/local/bin/n2asc
#    Development version
#n2asc_p = /usr/local/dev/n2asc/n2asc
#
#   Output format for all variables
#    (e.g., %14e == 2.52932e-01, default is %10.3f)
format = %14e
#
#   Output variable list (separated by white space on one line)
varlist = ADIFR BDIFR
#    
#   Output file name modifier for user:  RAF
#    file name will be of the form pppxfnns_fmod.aext
#     where:   ppp = 3-digit project number
#                x = f (ferry), r (research), t(test)
#                f = <f character>
#               nn = 2-digit flight number
#                s = possible segment letter (may not be present)
#                _ = <underscore character>
#             fmod = file name modifier             <-- (set below)
#                . = <period character>
#             aext = ASCII extension (txt)
#
#   Use special NASA ASCII output format?
nasa = yes
#nasa = no
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e.,
#     not a standard RAF data set, to another user.)
fmod = rtf
#
#-------  end of n2asc_cdf_rtf template
#
#------------  Example:  copy_ads_raf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_ads_raf
#  purpose:   copy raw ADS data file to RAF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
#
#  Settings
#
#   type of copy command to be used
#copy_type = ldm
#copy_type = scp
#copy_type = ftp
#copy_type = sftp
#
#   specific command to use (don't duplicate "copy_p"; comment all but one)
#    scp program assignment (with command-line options, if any)
#copy_p = /usr/bin/scp
#copy_p = /usr/bin/scp
#copy_p = scp
#copy_p = /usr/bin/scp -AqB
#   ldm program assignment (use correct machine name)
#copy_p = rsh renegade -l ldm pqinsert
#
#    ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#    sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#copy_p = sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = ruth
#login = ihop-anstett
#
#   Destination machine (IP address)
dest = vivaldi.atd.ucar.edu
#dest = raf.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /jnet/data
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
#fmod = raf
#
#-------  end of copy_ads_raf template
#
#------------  Example:  copy_2d_raf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_2d_raf
#  purpose:   copy raw PMS-2D data file to RAF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#copy_type = ftp
#copy_type = sftp
#
#   specific command to use (don't duplicate "copy_p"; comment all but one)
#    scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = scp
#copy_p = /usr/bin/scp -AqB
#
#    ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#    sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#copy_p = sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = ruth
#login = ihop-anstett
#
#   Destination machine (IP address)
dest = vivaldi.atd.ucar.edu
#dest = raf.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /jnet/data
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
#fmod = raf
#
#-------  end of copy_2d_raf template
#
#------------  Example:  copy_mcr_raf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_mcr_raf
#  purpose:   copy raw MCR data file to RAF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#copy_type = ftp
#copy_type = sftp
#
#   specific command to use (don't duplicate "copy_p"; comment all but one)
#    scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = scp
#copy_p = /usr/bin/scp -AqB
#
#    ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#    sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#copy_p = sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = ruth
#login = ihop-anstett
#
#   Destination machine (IP address)
dest = vivaldi.atd.ucar.edu
#dest = raf.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /jnet/data
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
#fmod = raf
#
#-------  end of copy_mcr_raf template
#
#------------  Example:  copy_cdf_raf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_cdf_raf
#  purpose:   copy processed netCDF data file to RAF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
#copy_set = copy_type copy_p zip login dest ddp fmod
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#
#   scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = /usr/bin/scp -AqB
#
#   ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#   sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = ruth
#login = ihop-anstett
#
#   Destination machine (IP address)
dest = vivaldi.atd.ucar.edu
#dest = raf.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /jnet/data
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
#fmod = raf
#
#-------  end of copy_cdf_raf template
#
#------------  Example:  copy_cdf_rtf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_cdf_rtf
#  purpose:   copy processed netCDF data file to RTF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
#copy_set = copy_type copy_p zip login dest ddp fmod
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#
#   scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = /usr/bin/scp -AqB
#
#   ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#   sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = dmg
#
#   Destination machine (IP address)
dest = charlie.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /scr/science41/dmg/CF/p3
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
#fmod = rtf
#
#-------  end of copy_cdf_rtf template
#
#------------  Example:  copy_asc_rtf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_asc_rtf
#  purpose:   copy special ASCII data file to RTF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
#copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
copy_set = copy_type copy_p zip login dest ddp fmod
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#
#   scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = /usr/bin/scp -AqB
#
#   ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#   sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = dmg
#
#   Destination machine (IP address)
dest = charlie.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /scr/science41/dmg/CF/p3
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
fmod = rtf
#
#-------  end of copy_asc_rtf template
#
#------------  Example:  copy_cdf_rtf  -------------------------------
#  (Copy this template starting with the next line.)
#
#  gndproc job file
#  name:  copy_cdf_rtf
#  purpose:   copy SPECIAL netCDF data file to RTF
#
#  Notes:  Comment lines start with #
#          An authorized keyset between source and destination machines
#           must be set up if using scp or sftp
#          Success also depends on a network connection which may not exist
#
#  What is set (Edit this line to add/delete settings.)
#copy_set = copy_type copy_p zip login dest ddp
#   (Raw and standard processed data files for RAF should not have an "fmod")
copy_set = copy_type copy_p zip login dest ddp fmod
#
#  Settings
#
#   type of copy command to be used
copy_type = scp
#copy_type = ftp
#copy_type = sftp
#
#   specific command to use (don't duplicate "copy_p"; comment all but one)
#    scp program assignment (with command-line options, if any)
copy_p = /usr/bin/scp
#copy_p = scp
#copy_p = /usr/bin/scp -AqB
#
#    ftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/ftp -n -v
#copy_p = ftp -n -v
#copy_p = /usr/kerberos/bin/ftp -n -v
#
#    sftp program assignment (with command-line options, if any)
#copy_p = /usr/bin/sftp
#copy_p = sftp
#
#   gzip the file?
zip = yes
#zip = no
#
#   Destination login name
login = dmg
#
#   Destination machine (IP address)
dest = charlie.atd.ucar.edu
#
#   Destination data path on destination machine
ddp = /scr/science41/dmg/CF/p3
#
#   Output file-name modifier to uniquely define this data set
#    (Use this modifier when sending an unique data set, i.e., not
#     a standard RAF data set, to another user.)
fmod = rtf
#
#-------  end of copy_cdf_rtf template
#
#
#        E N D   O F   J O B   F I L E   T E M P L A T E S
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#       J O B   F I L E   T E M P L A T E   T E M P L A T E
#
#------------  Example:  #_#_#          -----------------------------
#  (Copy this template starting with the next line.)
#
#       job file template goes here
#
#-------  end of #_#_# template
#
#   E N D   O F   J O B   F I L E   T E M P L A T E   T E M P L A T E
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#       N I M B U S   S E T U P   F I L E   T E M P L A T E
#
#
#------------  Example:  setup.ppp      -----------------------------
ProjNum=ppp
pr=1
#-------  end of setup.ppp template
#
#   E N D   O F   J O B   F I L E   T E M P L A T E   T E M P L A T E
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
