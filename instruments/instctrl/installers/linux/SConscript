env = Environment(tools = ['default','svninfo'])

# Copy other artifacts into the Linux deployment
sources_targets = [
  ['run_proxy',                                  '/bin/run_proxy'             ],
  ['#/Resources/proxy/proxyIcon_512x512x32.png', '/resources/proxyIcon.png'   ],
  ['#/configurations/Proxy.ini',                 '/resources/Proxy.ini'       ],
  ['#/configurations/Proxy-AVAPS.ini',           '/resources/Proxy-AVAPS.ini' ],
  ['#/test_certs/client.key',                    '/test_certs/client.key'     ],
  ['#/test_certs/client.crt',                    '/test_certs/client.crt'     ],
  ['#/test_certs/eol-rt-data.crt',               '/test_certs/eol-rt-data.crt'],
]

for pair in sources_targets:
    s = pair[0]
    t = pair[1]
    t = env['DEPLOY_DIRECTORY']+t
    artifact = Command(t , s, Copy("$TARGET","$SOURCE"))
    env.Default(artifact)

# Remove the deploy directory on a clean. For lack of a better choice, 
# tie it to the proxy program.
env.Clean('#/proxy/ric_proxy', env['DEPLOY_DIRECTORY'])

# Make a tarfile from the deploy target
revision = env['SVNREVISION']
revision = revision.replace(':','-')
ricrev = 'RIC-' + revision

deploydir = env['DEPLOY_DIRECTORY']
tardest = env.Dir('.').get_abspath()+ '/' + ricrev + '.tar.gz'

tarcmd =           'cp -R ' + deploydir + ' /tmp/' + ricrev +'; '
tarcmd = tarcmd +  'cd /tmp; '
tarcmd = tarcmd +  'tar -czvf ' + tardest + ' ' + ricrev + '; '
tarcmd = tarcmd +  'rm -rf /tmp/' + ricrev + '; '
tarfile = Command(tardest, deploydir, tarcmd)

env.Default(tarfile)

