env = Environment(tools = ['default','svninfo'])

# Copy other artifacts into the Linux deployment
sources_targets = [
  ['run_switch',                                 '/bin/run_switch'            ],
  ['run_proxy',                                  '/bin/run_proxy'             ],
  ['#/Resources/proxy/proxyIcon_512x512x32.png', '/resources/proxyIcon.png'   ],
  ['#/switch/ACSwitch.ini',                      '/resources/ACSwitch.ini'    ],
  ['#/switch/GroundSwitch.ini',                  '/resources/GroundSwitch.ini'],
  ['#/switch/Switch-AVAPS.ini',                  '/resources/Switch-AVAPS.ini'],
  ['#/proxy/Proxy-AVAPS.ini',                    '/resources/Proxy-AVAPS.ini' ],
  ['#/test_certs/client.crt',                    '/test_certs/client.crt'     ],
  ['#/test_certs/client.key',                    '/test_certs/client.key'     ],
  ['#/test_certs/server.crt',                    '/test_certs/server.crt'     ],
  ['#/test_certs/server.key',                    '/test_certs/server.key'     ],
  ['#/test_certs/udpcipher.key',                 '/test_certs/udpcipher.key'  ],
]

for pair in sources_targets:
    s = pair[0]
    t = pair[1]
    t = env['DEPLOY_DIRECTORY']+t
    artifact = Command(t , s, Copy("$TARGET","$SOURCE"))
    env.Default(artifact)

# Remove the deploy directory on a clean. For lack of a better choice, 
# tie it to the switch program.
env.Clean('#/switch/switch', env['DEPLOY_DIRECTORY'])

# Make a trafile from the deploy target
revision = env['SVNREVISION']
revision = revision.replace(':','-')
ricrev = 'RIC-' + revision

tardest = env.Dir('.').get_abspath()+ '/' + ricrev + '.tar.gz'

tarcmd =           'cp -R deploy/ /tmp/' + ricrev +'; '
tarcmd = tarcmd +  'cd /tmp; '
tarcmd = tarcmd +  'tar -czvf ' + tardest + ' ' + ricrev + '; '
tarcmd = tarcmd +  'rm -rf /tmp/' + ricrev + '; '
tarfile = Command(tardest, '#/deploy', tarcmd)
env.Default(tarfile)

