/*
-------------------------------------------------------------------------
OBJECT NAME:	dsm.c

FULL NAME:		Utilities for DSM Option Menus

ENTRY POINTS:	InitializeDSMmenu()
				GetDSMmenu()
				SetDSMmenu()
				SetDSMlist()	Get DSM_LIST for given Aircraft

STATIC FNS:		none

DESCRIPTION:	

REFERENCES:		none

REFERENCED BY:	

COPYRIGHT:		University Corporation for Atmospheric Research, 1996
-------------------------------------------------------------------------
*/

#include "hdrbld.h"
#include "hardwire.h"
#include "ac.h"

#include <Xm/PushB.h>
#include <Xm/RowColumn.h>

struct _dsm
	{
	char	*name;
	bool	active;
	Widget	b;
	} ;

struct _dsm	DSMmasterList[] =
	{
	"None",		TRUE,	NULL,
	"FORWARD",	FALSE,	NULL,
	"AFT",		FALSE,	NULL,
	"PODLW",	FALSE,	NULL,
	"PODRW",	FALSE,	NULL,
	"LEFT",		FALSE,	NULL,
	"RIGHT",	FALSE,	NULL,
	NULL,		FALSE,	NULL
	};


/* -------------------------------------------------------------------- */
void InitializeDSMclass()
{
	int     i, n;
	Arg     args[8];
	XmString    name;
	Widget  b[MAX_DSM];

	for (i = 0; DSMmasterList[i].name; ++i)
		{
		name = XmStringCreateLocalized(DSMmasterList[i]);

		n = 0;
		XtSetArg(args[n], XmNlabelString, name); ++n;
		DSMmasterList[i].b = XmCreatePushButton(dsmMenu, "dsmButton", args, n);

		if (cb)
			XtAddCallback(b[i], XmNactivateCallback, cb, (XtPointer)i);

		XmStringFree(name);
		}

	XtManageChildren(b, i);
 
}	/* END INITIALIZEDSMMENU */

/* -------------------------------------------------------------------- */
char *GetDSMmenu(Widget dsmMenu)
{
	Widget		cascade;
	Arg			args[3];
	Cardinal	n;
	XmString	label;
	char		*p;

	cascade = XmOptionButtonGadget(dsmMenu);

	n = 0;
	XtSetArg(args[n], XmNlabelString, &label); ++n;
	XtGetValues(cascade, args, n);

	XmStringGetLtoR(label, XmSTRING_DEFAULT_CHARSET, &p);
	XmStringFree(label);

	return(p);

}	/* END GETDSMMENU */

/* -------------------------------------------------------------------- */
void SetDSMmenu(Widget dsmMenu, char *dsm)
{
	Arg			args[2];
	Cardinal	n;
	XmString	name;

	name = XmStringCreateLocalized(dsm);

	n = 0;
	XtSetArg(args[n], XmNlabelString, name); ++n;
	XtSetValues(XmOptionButtonGadget(dsmMenu), args, 1);
	XmStringFree(name);

}

/* -------------------------------------------------------------------- */
void SetDSMlist(char ac[])
{
	int     i;
	char    *p;

	for (i = 0; DSM[i]; ++i)
		free(DSM[i]);

	strcpy(buffer, GetAircraftParameter(ac, "DSM_LIST"));

	p = strtok(buffer, ", \t\n");

	for (i = 0; p; ++i)
		{
		DSM[i] = GetMemory(strlen(p));
		strcpy(DSM[i], p);
		p = strtok(NULL, ", \t\n");
		}

	DSM[i] = NULL;
 
}	/* END SETDSMLIST */

/* END DSM.C */
